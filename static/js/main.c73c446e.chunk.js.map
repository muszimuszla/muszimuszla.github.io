{"version":3,"sources":["assets/beige_button_back.PNG","assets/beige_button_left.PNG","assets/beige_button_right.PNG","assets/beige_button_shadow.PNG","assets/yellow_led_light.PNG","assets/cross_gray_left.PNG","assets/cross_gray_left_shadow.PNG","assets/cross_gray_right.PNG","assets/cross_gray_right_shadow.PNG","assets/cross_gray_up.PNG","assets/cross_gray_up_shadow.PNG","assets/cross_gray_down.PNG","assets/cross_gray_down_shadow.PNG","assets/cross_gray_middle.PNG","assets/pokedex_without_buttons.PNG","assets/blue_led_light.PNG","assets/small_gray_button.PNG","assets/small_gray_button_shadow.PNG","components/Ability.jsx","components/Abilities.jsx","components/Sprites.jsx","components/Type.jsx","components/Types.jsx","components/GeneralInformation.jsx","components/Species.jsx","components/Pokemon.jsx","components/Pokedex.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Ability","state","pokemonAbility","abilityInfo","this","props","axios","get","url","res","setState","data","style","fontSize","name","Component","Abilities","pokemonAbilities","Fragment","className","map","key","slot","ability","Sprites","pokemonSprites","width","imageRendering","src","front_default","alt","Type","typeName","type","Types","pokemonTypes","pokemonType","i","GeneralInformation","height","weight","baseExp","Species","species","pokedexNumber","base_happiness","color","habitat","shape","capture_rate","Pokemon","pokemonPokedexNumber","pokemon","information","light","ChooseInformation","ChangeLed","setTimeout","choosen","led","base_experience","yellow_light","beigeBtnBack","zIndex","marginLeft","marginTop","beigeBtnLeft","onClick","justifySelf","marginRight","beigeBtnRight","beigeBtnShadow","abilities","types","sprites","Pokedex","NextPokemon","NextTenPokemon","PreviousPokemon","PreviousTenPokemon","ResetPokemon","blue_light","bg","marginBottom","resetBtn","resetBtnShadow","btnUp","btnUpShadow","btnLeft","btnLeftShadow","btnMiddle","btnRight","btnRightShadow","btnDown","btnDownShadow","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c73c446e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beige_button_back.bc192b0d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/beige_button_left.09a46afb.PNG\";","module.exports = __webpack_public_path__ + \"static/media/beige_button_right.3a068bde.PNG\";","module.exports = __webpack_public_path__ + \"static/media/beige_button_shadow.bb4cad51.PNG\";","module.exports = __webpack_public_path__ + \"static/media/yellow_led_light.56657b00.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_left.c6021c9a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_left_shadow.141a0fc4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_right.4e0dcdfc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_right_shadow.e5622f0d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_up.4afdb024.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_up_shadow.dbbd4a20.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_down.e23974d2.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_down_shadow.127b66d6.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cross_gray_middle.214a941d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pokedex_without_buttons.b8beea01.PNG\";","module.exports = __webpack_public_path__ + \"static/media/blue_led_light.3c6704ca.PNG\";","module.exports = __webpack_public_path__ + \"static/media/small_gray_button.8b0eb5dd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/small_gray_button_shadow.7c82abe8.PNG\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Ability extends Component {\r\n    \r\n    state = { \r\n        pokemonAbility: '',\r\n        abilityInfo:''\r\n     }\r\n\r\n     async componentDidMount(){\r\n        const pokemonAbility = this.props.pokemonAbility;\r\n        const res = await axios.get(pokemonAbility.url);\r\n        this.setState({\r\n            pokemonAbility: pokemonAbility,\r\n            abilityInfo: res.data\r\n        })\r\n     }\r\n\r\n    render() { \r\n        return ( \r\n                    <div style={{fontSize:'8px'}}>{this.state.pokemonAbility.name}</div>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default Ability;","import React, { Component } from 'react';\r\nimport Ability from './Ability';\r\n\r\nclass Abilities extends Component {\r\n\r\n    state = {\r\n        pokemonAbilities: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        const pokemonAbilities= this.props.pokemonAbilities;\r\n        this.setState({pokemonAbilities: pokemonAbilities});\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                {this.state.pokemonAbilities ? (\r\n                    <div className='abilitiesItem'>\r\n                        {this.state.pokemonAbilities.map( pokemonAbility => (\r\n                            <Ability key={pokemonAbility.slot} pokemonAbility={pokemonAbility.ability} />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                ) }\r\n                \r\n            </React.Fragment>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default Abilities;","import React, { Component } from 'react';\r\n\r\nclass Sprites extends Component {\r\n\r\n    state = {\r\n        pokemonSprites:''\r\n      }\r\n\r\n    componentDidMount(){\r\n        const pokemonSprites = this.props.pokemonSprites;\r\n        this.setState({pokemonSprites:pokemonSprites})\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                {this.state.pokemonSprites ? (\r\n                    <div>\r\n                       <img className=\"img-responsive \" style={{width:\"200px\", imageRendering:\"pixelated\"}} \r\n                                   src={this.state.pokemonSprites.front_default} alt='Pic'/>\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                ) }\r\n            </React.Fragment>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default Sprites;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Type extends Component {\r\n\r\n    state = {\r\n        slot: '',\r\n        typeName: '',\r\n        type: ''\r\n      }\r\n\r\n    async componentDidMount(){\r\n        const slot = this.props.slot;\r\n        const typeName = this.props.type.name;\r\n        const res = await axios.get(this.props.type.url);\r\n        this.setState({\r\n            slot:slot,\r\n            typeName: typeName,\r\n            type: res.data\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n                <div style={{fontSize:'8px'}}> {this.state.typeName}</div>\r\n         );\r\n    }\r\n    \r\n}\r\n \r\nexport default Type;","import React, { Component } from 'react';\r\nimport Type from './Type';\r\n\r\nclass Types extends Component {\r\n\r\n    state = { \r\n        pokemonTypes:''\r\n     }\r\n\r\n    componentDidMount(){\r\n        const pokemonTypes = this.props.pokemonTypes;\r\n        this.setState({pokemonTypes:pokemonTypes})\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                {this.state.pokemonTypes ? (\r\n                    <div className='typesItem'>\r\n                       {this.state.pokemonTypes.map ((pokemonType, i) => (\r\n                           <Type  key={this.state.pokemonTypes[i].slot} slot={this.state.pokemonTypes[i].slot} type={this.state.pokemonTypes[i].type} />\r\n                       ))}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                ) }\r\n            </React.Fragment>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default Types;","import React, { Component } from 'react';\r\n\r\nclass GeneralInformation extends Component {\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"pokemonInfoNamesItem\">\r\n                    <div >NAME:  </div>\r\n                    <div >HEIGHT:</div>\r\n                    <div >WEIGHT: </div>   \r\n                    <div >BASE EXP: </div>  \r\n                </div>\r\n                <div className=\"pokemonInfoItem\">\r\n                    <div >{this.props.name}</div>\r\n                    <div > {this.props.height}</div>\r\n                    <div > {this.props.weight}</div>  \r\n                    <div> {this.props.baseExp}</div> \r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default GeneralInformation;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Species extends Component {\r\n\r\n    state = { \r\n        species:''\r\n     }\r\n\r\n     async componentDidMount(){\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${this.props.pokedexNumber}/`);\r\n        this.setState({\r\n            species: res.data\r\n        })\r\n     }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                {this.state.species ? (\r\n                    <React.Fragment>\r\n                        <div className=\"pokemonInfoNamesItem\">\r\n                            <div >HAPPINESS </div>\r\n                            <div >COLOR:</div>\r\n                            <div >HABITAT: </div>   \r\n                            <div >SHAPE: </div> \r\n                            <div>CAPTURE:</div> \r\n                        </div>\r\n                        <div className=\"pokemonInfoItem\">\r\n                            <div>{this.state.species.base_happiness}</div>\r\n                            <div>{this.state.species.color.name}</div>\r\n                            <div>{this.state.species.habitat.name}</div>  \r\n                            <div>{this.state.species.shape.name}</div> \r\n                            <div>{this.state.species.capture_rate}</div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n}\r\n \r\nexport default Species;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Abilities from './Abilities';\r\nimport Sprites from './Sprites';\r\nimport Types from './Types';\r\nimport GeneralInformation from './GeneralInformation';\r\nimport Species from './Species';\r\nimport beigeBtnBack from '../assets/beige_button_back.PNG';\r\nimport beigeBtnLeft from '../assets/beige_button_left.PNG';\r\nimport beigeBtnRight from '../assets/beige_button_right.PNG';\r\nimport beigeBtnShadow from '../assets/beige_button_shadow.PNG';\r\nimport yellow_light from '../assets/yellow_led_light.PNG';\r\n\r\nclass Pokemon extends Component {\r\n\r\n    state = { \r\n        pokemonPokedexNumber: '',\r\n        pokemon: '',\r\n        information: 'generalInformation',\r\n        light: 'off'\r\n     }\r\n\r\n    async componentDidMount(){\r\n        const pokemonPokedexNumber = this.props.pokemonPokedexNumber;\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonPokedexNumber}/`);\r\n        this.setState({\r\n            pokemonPokedexNumber:pokemonPokedexNumber,\r\n            pokemon: res.data,\r\n        })\r\n    }\r\n\r\n    ChooseInformation = () => {\r\n        this.ChangeLed();\r\n        if(this.state.information==='generalInformation'){\r\n            this.setState({information: 'species'})\r\n        }\r\n        else{\r\n            this.setState({information: 'generalInformation'})\r\n        }\r\n        setTimeout(this.ChangeLed,250);\r\n    }\r\n\r\n    ChangeLed = () => {\r\n        if(this.state.light==='off'){\r\n            this.setState({light:'on'})\r\n        } else{\r\n            this.setState({light:'off'})\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        let choosen;\r\n        if (this.state.information==='generalInformation'){\r\n            choosen = <GeneralInformation key={this.state.pokemon.height}\r\n                                        name={this.state.pokemon.name} \r\n                                        height={this.state.pokemon.height}\r\n                                        weight={this.state.pokemon.weight}\r\n                                        baseExp={this.state.pokemon.base_experience}\r\n                                        />;\r\n        }\r\n        else if (this.state.information==='species'){\r\n            choosen =<Species key={this.state.pokemon.species} pokedexNumber={this.state.pokemonPokedexNumber} />;\r\n        }\r\n        else {\r\n            choosen =<div> <p> ... </p></div>;\r\n        }\r\n\r\n        let led;\r\n        if (this.state.light==='on'){\r\n            led=<img className=\"yellowLight\" src={yellow_light} alt='yellowLight' />}\r\n        else {\r\n            led=<div></div>\r\n        }\r\n\r\n        return ( \r\n            <React.Fragment>\r\n                {led}\r\n                {choosen}\r\n                <div className=\"pokemonInfoCrossBg\"></div>  \r\n                <img className=\"beigeButtonItem\" src={beigeBtnBack} alt='beigeBtnBack'/>\r\n                <img className=\"beigeButtonItem\" style={{zIndex:'1', marginLeft:'7px', marginTop:'7px'}} src={beigeBtnLeft} alt='beigeBtnLeft' onClick={this.ChooseInformation} />\r\n                <img className=\"beigeButtonItem\" style={{zIndex:'1', justifySelf:'end', marginRight:'2px'}} src={beigeBtnRight} alt='beigeBtnRight' onClick={this.ChooseInformation}/>\r\n                <img className=\"beigeButtonItem\" style={{marginLeft:'8.5px', marginTop:'16px'}} src={beigeBtnShadow} alt='beigeBtnShadow'  />              \r\n                <div className=\"pokedexNumberItem\">\r\n                    {this.state.pokemonPokedexNumber}\r\n                </div>\r\n                <div className=\"pokedenNumberItemCrossBg\"></div>\r\n                <Abilities key={this.state.pokemon.name} pokemonAbilities={this.state.pokemon.abilities} />\r\n                <Types key={this.state.pokemon.types} pokemonTypes={this.state.pokemon.types} />\r\n                <div className='abilitiesItemCrossBg'></div>\r\n                <div className='typesItemCrossBg'></div>\r\n                <div className=\"spriteItem\">\r\n                    <Sprites key={this.state.pokemon.sprites} pokemonSprites={this.state.pokemon.sprites} />       \r\n                </div>  \r\n                <div className=\"spriteItemCrossBg\"></div>\r\n            </React.Fragment>\r\n         );\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default Pokemon;","import React, { Component} from 'react';\r\nimport Pokemon from './Pokemon';\r\nimport btnLeft from '../assets/cross_gray_left.PNG';\r\nimport btnLeftShadow from '../assets/cross_gray_left_shadow.PNG';\r\nimport btnRight from '../assets/cross_gray_right.PNG';\r\nimport btnRightShadow from '../assets/cross_gray_right_shadow.PNG';\r\nimport btnUp from '../assets/cross_gray_up.PNG';\r\nimport btnUpShadow from '../assets/cross_gray_up_shadow.PNG';\r\nimport btnDown from '../assets/cross_gray_down.PNG';\r\nimport btnDownShadow from '../assets/cross_gray_down_shadow.PNG';\r\nimport btnMiddle from '../assets/cross_gray_middle.PNG';\r\nimport bg from '../assets/pokedex_without_buttons.PNG';\r\nimport blue_light from '../assets/blue_led_light.PNG';\r\nimport resetBtn from '../assets/small_gray_button.PNG';\r\nimport resetBtnShadow from '../assets/small_gray_button_shadow.PNG';\r\n\r\nclass Pokedex extends Component {\r\n\r\n    state = { \r\n        pokemonPokedexNumber: 1,\r\n        light:'off'\r\n     }\r\n\r\n    NextPokemon = () => {\r\n        this.ChangeLed();\r\n        if((this.state.pokemonPokedexNumber + 1)>151) {\r\n            this.setState({pokemonPokedexNumber: 1 });\r\n        } else{\r\n            this.setState({pokemonPokedexNumber: this.state.pokemonPokedexNumber + 1 });\r\n        }\r\n        setTimeout(this.ChangeLed,250);\r\n    }\r\n\r\n    NextTenPokemon = () => {\r\n        this.ChangeLed();\r\n        if((this.state.pokemonPokedexNumber + 10)>151) {\r\n            this.setState({pokemonPokedexNumber: 1 });\r\n        } else{\r\n            this.setState({pokemonPokedexNumber: this.state.pokemonPokedexNumber + 10 });\r\n        }\r\n        setTimeout(this.ChangeLed,250);\r\n    }\r\n\r\n    ChangeLed = () => {\r\n        if(this.state.light==='off'){\r\n            this.setState({light:'on'})\r\n        } else{\r\n            this.setState({light:'off'})\r\n        }\r\n    }\r\n\r\n    PreviousPokemon = () => {\r\n        this.ChangeLed();\r\n        if((this.state.pokemonPokedexNumber - 1) === 0){\r\n            this.setState({pokemonPokedexNumber: 151 });\r\n        } else{\r\n            this.setState({pokemonPokedexNumber: this.state.pokemonPokedexNumber - 1 });\r\n        }\r\n        setTimeout(this.ChangeLed,250);\r\n    }\r\n\r\n    PreviousTenPokemon = () => {\r\n        this.ChangeLed();\r\n        if((this.state.pokemonPokedexNumber - 10) < 0){\r\n            this.setState({pokemonPokedexNumber: 150 });\r\n        } else{\r\n            this.setState({pokemonPokedexNumber: this.state.pokemonPokedexNumber - 10 });\r\n        }\r\n        setTimeout(this.ChangeLed,250);\r\n    }\r\n\r\n    ResetPokemon = () => {\r\n        this.ChangeLed();\r\n        this.setState({pokemonPokedexNumber: 1 });\r\n        setTimeout(this.ChangeLed,250);\r\n    }\r\n   \r\n\r\n    render() { \r\n\r\n        var led;\r\n        if(this.state.light==='on'){\r\n            led=<img className=\"blueLight\" src={blue_light} alt='blueLight' />}\r\n        else{\r\n            led=<div></div>\r\n        }\r\n\r\n        return ( \r\n            <React.Fragment >\r\n                <div className=\"pokedexContainer\" >\r\n                    <img className=\"pokedexImage\" src={bg} alt='bg' />\r\n                    <div className=\"pokemonGrid\" >\r\n                            {led}\r\n                            <Pokemon key={this.state.pokemonPokedexNumber} pokemonPokedexNumber={this.state.pokemonPokedexNumber} />\r\n                            <img className=\"resetButtonItem\" style={{zIndex:'1', marginRight:'6px', marginBottom:'6px'}} src={resetBtn} alt='resetBtn'  onClick={this.ResetPokemon} />\r\n                            <img className=\"resetButtonItem\" src={resetBtnShadow} alt='resetBtnShadow'/>\r\n                            <div className=\"crossButtonItem\">\r\n                                <div className=\"crossButtonGrid\" >\r\n                                    <img className=\"crossButtonUpItem\" src={btnUp} alt='btnUp'  onClick={this.NextTenPokemon} />\r\n                                    <img className=\"crossButtonUpShadowItem\" src={btnUpShadow} alt='btnUpShadow'/> \r\n                                    <img className=\"crossButtonLeftItem\" src={btnLeft} alt='btnLeft'  onClick={this.PreviousPokemon} />\r\n                                    <img className=\"crossButtonLeftShadowItem\" src={btnLeftShadow} alt='btnLeftShadow' />\r\n                                    <img className=\"crossButtonMiddleItem\" src={btnMiddle}  alt='btnMiddle' />\r\n                                    <img className=\"crossButtonRightItem\" src={btnRight} alt='btnRight'  onClick={this.NextPokemon} />\r\n                                    <img className=\"crossButtonRightShadowItem\" src={btnRightShadow} alt='btnRightShadow' />\r\n                                    <img className=\"crossButtonDownItem\" src={btnDown} alt='btnDown'  onClick={this.PreviousTenPokemon} />\r\n                                    <img className=\"crossButtonDownShadowItem\" src={btnDownShadow} alt='btnDownShadow' />\r\n                                </div> \r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n}\r\n \r\nexport default Pokedex;\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Pokedex from './components/Pokedex';\n\nclass App extends Component {\n\n    render() { \n        return (     \n            <React.Fragment >\n                <div className=\"mainContainer\">\n                    <Pokedex /> \n                </div>\n            </React.Fragment>\n        );\n    }\n    \n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}